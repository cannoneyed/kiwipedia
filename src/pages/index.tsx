import Head from 'next/head';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import sqlite3 from 'sqlite3';
import { open } from 'sqlite';
import path from 'path';
import Link from 'next/link';

const inter = Inter({ subsets: ['latin'] });

interface Page {
  title: string;
  url: string;
}

export interface Props {
  nArticles: number;
  pages: Page[];
}

export default function Article(props: Props) {
  return (
    <>
      <Head>
        <title>Kiwipedia</title>
        <meta
          name="description"
          content="Kiwipedia is a free online encyclopedia, completely synthesize by AI."
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={inter.className}>
        <div className={styles.main}>
          <div className={styles.topBanner}>
            <div className={styles.title}>Welcome to Kiwipedia</div>
            <div className={styles.subtitle}>
              The synthetic encyclopedia completely generated by AI.
            </div>
            <div className={styles.counts}>
              {props.nArticles} articles in English.
            </div>
          </div>
          <div className={styles.articles}>
            <div className={styles.articlesTitle}>Featured articles</div>
            {props.pages.map((page) => {
              return (
                <div>
                  <Link href={page.url}>
                    <span className={styles.link}>{page.title}</span>
                  </Link>
                </div>
              );
            })}
          </div>
        </div>
      </main>
    </>
  );
}

export async function getStaticProps() {
  const filename = path.resolve(process.cwd(), '.db/database.db');
  const db = await open({
    filename,
    driver: sqlite3.Database,
  });

  const results = await db.all('SELECT title, page_id FROM synth_articles');
  const slice = results.slice(0, 100);

  return {
    props: {
      pages: slice.map((entry) => {
        return { title: entry.title, url: `/wiki/${entry.page_id}` };
      }),
      nArticles: results.length,
    },
  };
}
